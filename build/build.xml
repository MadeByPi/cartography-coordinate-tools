<project name="catrography-tools" default="test-and-build" basedir="../">
	
	<!-- configuration -->		
	<property file="${basedir}/build/build.properties" />
	
	<target name="test-and-build" depends="runTests,build-js-module">
		<echo>runTests and build-js-module completed</echo>
	</target>
	
	<!-- run the munit tests -->
	<target name="runTests">
		<echo>Running ${projectName} tests...</echo>
		<exec executable="haxelib" dir="${basedir}/test" failonerror="true">
		  <arg value="run"/>
		  <arg value="munit"/>
		  <arg value="test"/>
		  <arg value="-coverage"/>
		  <arg value="-browser"/>
		  <arg value="phantomjs"/> 
		  <!--
		  NOTE: I forked MUnit to add phantomjs as a browser target, you'll need to use that version for now if you want to run headless browser tests (js)
		  https://github.com/mikedotalmond/MassiveUnit
		  -->
		</exec>
		
		<echo>Done!</echo>
		
		<fail message="One or more tests FAILED">
			<condition>
				<resourcecontains resource="${report.results}" substring="FAILED"/>
			</condition>
		</fail>
	</target>
	
	
	<target name="build-js-module" depends="build-js,wrap-js,minify-js">
		<echo>Built ${projectName} js</echo>
		<echo>${basedir}/bin/${projectName}.js</echo>
		<echo>${basedir}/bin/${projectName}.min.js</echo>
	</target>
	
	<target name="build-php">			
		<!-- haxe -main CartographyModuleMain -cp src -php bin/php -->
		<exec executable="haxe" dir="${basedir}" failonerror="true">
			<!-- main/document class -->
			<arg value="-main"/><arg value="CartographyModuleMain"/>
			<!-- classpaths -->
			<arg value="-cp"/><arg value="src"/>
			<!-- flags -->
			<arg value="-D"/><arg value="phpModule"/>
			<!-- build -js output -->
			<arg value="-php"/><arg value="${bin}/php"/>
		</exec>
		<echo>Done!</echo>
	</target>
	
	<target name="build-js">
		<exec executable="haxe" dir="${basedir}" failonerror="true">
			<!-- main/document class -->
			<arg value="-main"/><arg value="CartographyModuleMain"/>
			<!-- classpaths -->
			<arg value="-cp"/><arg value="src"/>
			<!-- options -->
			<arg value="-dce"/><arg value="full"/>
			<!-- flags -->
			<arg value="-D"/><arg value="jsModule"/>
			<arg value="-D"/><arg value="analyzer"/>
			<!-- build -js output -->
			<arg value="-js"/><arg value="${bin}/${projectName}.js"/>
		</exec>
		<echo>Done!</echo>
	</target>
	
	<target name="wrap-js">
		<exec executable="neko" dir="${basedir}" failonerror="true">
			<arg value="${buildTools}/UMDWrap.n"/>
			<arg value="-in"/><arg value="${bin}/${projectName}.js"/>
			<arg value="-out"/><arg value="${bin}/${projectName}.js"/> <!-- overwrite it -->
		</exec>
		<echo>Done!</echo>
	</target>
	
	<target name="minify-js">
		<exec executable="java" failonerror="true">
		  <arg value="-jar"/><arg value="${buildTools}/compiler.jar"/>
		  <arg value="--js"/><arg value="${basedir}/bin/${projectName}.js"/>
		  <arg value="--js_output_file"/><arg value="${basedir}/bin/${projectName}.min.js"/>
		</exec>
		<echo>Done!</echo>
	</target>
	
</project>